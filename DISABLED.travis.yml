git:
  depth: 3
env:
  global:
  - secure: "MhcV5a3N8vrJ68sLcqQkH9F/gN2r2ibNM2y7yrt+mJ9N5WLl9bdzIEWyUD4AAwBk6Rf9BTQ25utpbWIlPLo2rwChh4yldGA/PQF3IJju4nlJLuVjX9XPk9PEZLYbwQGumMiRb0TonwvNNG5SyrM+mu/YT3oDKwykLtTG4lz3p14="
  - secure: "CqpA+9sezpt3BXRuocToa9dDTOMEpg08XCy9WX73PbfoDHFEPXSEboY46VhbX4p3KJeRZ2Go5zQS5pPB7+CubMMKmb1xmo1pnHtmWemnnfHzSRPEM27wMokNkYLY8jIRcZkdJpZHWjGWV4fzr6cDMg3t22gzOB+eUnGCLa7Ziqo="
  - AWS_DEFAULT_REGION: "us-east-1"
  - S3_PARAMS: '"--acl public-read --cache-control \"public,must-revalidate,proxy-revalidate,max-age=0\""'
  - GLFW_PARAMS: '"-DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF -DCMAKE_BUILD_TYPE=Release"'

matrix:
  include:

  # -----------------
  - name: "Linux x64"
  # -----------------
    dist: xenial
    language: c
    compiler: gcc

    addons:
      apt:
        packages:
        - cmake
        - gcc-4.8
        - libxrandr-dev
        - libxinerama-dev
        - libxcursor-dev
        - libxi-dev
        - libxext-dev

    before_install:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin

    script:
    - mkdir build
    - cd build
    - "CC=gcc-4.8 cmake $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" -DCMAKE_SHARED_LINKER_FLAGS=-Wl,--wrap,memcpy .."
    - cmake --build .
    - strip src/libglfw.so
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw.so.git"
    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/x64/ $S3_PARAMS"
    - "aws s3 cp libglfw.so.git s3://build.lwjgl.org/nightly/linux/x64/ $S3_PARAMS"

  # -----------------
  - name: "Linux x64 - Wayland"
  # -----------------
    dist: focal
    language: c
    compiler: gcc

    addons:
      apt:
        packages:
        - cmake
        - wayland-protocols
        - libwayland-dev
        - libxkbcommon-dev
        - libegl1-mesa-dev

    before_install:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin

    script:
    - mkdir build
    - cd build
    - "CC=gcc cmake -DGLFW_USE_WAYLAND=ON $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -D_POSIX_C_SOURCE=199309L -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" -DCMAKE_SHARED_LINKER_FLAGS=-Wl,--wrap,memcpy .."
    - cmake --build .
    - strip src/libglfw.so
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw_wayland.so.git"
    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/x64/libglfw_wayland.so $S3_PARAMS"
    - "aws s3 cp libglfw_wayland.so.git s3://build.lwjgl.org/nightly/linux/x64/ $S3_PARAMS"

  # -----------------
  - name: "Linux arm32"
  # -----------------
    dist: xenial
    language: c
    compiler: gcc

    addons:
      apt:
        packages:
        - cmake
        - gcc-4.8-arm-linux-gnueabihf
        - libc6-dev-armhf-cross

    before_install:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - sudo sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
    - sudo grep "ubuntu.com/ubuntu" /etc/apt/sources.list | sudo tee /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's/amd64,i386/armhf,arm64/' /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
    - sudo dpkg --add-architecture armhf
    - sudo apt-get update || true
    - sudo apt-get -yq --no-install-suggests --no-install-recommends install libxrandr-dev:armhf libxinerama-dev:armhf libxcursor-dev:armhf libxi-dev:armhf libxext-dev:armhf -o Dpkg::Options::="--force-overwrite"

    script:
    - mkdir build
    - cd build
    - "CC=arm-linux-gnueabihf-gcc-4.8 cmake $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" .."
    - cmake --build .
    - arm-linux-gnueabihf-strip src/libglfw.so
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw.so.git"
    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/arm32/ $S3_PARAMS"
    - "aws s3 cp libglfw.so.git s3://build.lwjgl.org/nightly/linux/arm32/ $S3_PARAMS"

  # -----------------
  - name: "Linux arm32 - Wayland"
  # -----------------
    dist: focal
    language: c
    compiler: gcc

    addons:
      apt:
        packages:
        - cmake
        - gcc-arm-linux-gnueabihf
        - libc6-dev-armhf-cross

    before_install:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - sudo sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
    - sudo grep "ubuntu.com/ubuntu" /etc/apt/sources.list | sudo tee /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's/amd64,i386/armhf,arm64/' /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
    - sudo dpkg --add-architecture armhf
    - sudo apt-get update || true
    - sudo apt-get -yq install wayland-protocols:armhf libwayland-dev:armhf libxkbcommon-dev:armhf libegl1-mesa-dev:armhf -o Dpkg::Options::="--force-overwrite"

    script:
    - mkdir build
    - cd build
    - "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/arm-linux-gnueabihf/pkgconfig CC=arm-linux-gnueabihf-gcc cmake -DGLFW_USE_WAYLAND=ON $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -D_POSIX_C_SOURCE=199309L -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" .."
    - cmake --build .
    - arm-linux-gnueabihf-strip src/libglfw.so
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw_wayland.so.git"
    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/arm32/libglfw_wayland.so $S3_PARAMS"
    - "aws s3 cp libglfw_wayland.so.git s3://build.lwjgl.org/nightly/linux/arm32/ $S3_PARAMS"

  # -----------------
  - name: "Linux arm64"
  # -----------------
    dist: xenial
    language: c
    compiler: gcc

    addons:
      apt:
        packages:
        - cmake
        - gcc-4.8-aarch64-linux-gnu
        - libc6-dev-arm64-cross

    before_install:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - sudo sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
    - sudo grep "ubuntu.com/ubuntu" /etc/apt/sources.list | sudo tee /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's/amd64,i386/armhf,arm64/' /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
    - sudo dpkg --add-architecture arm64
    - sudo apt-get update || true
    - sudo apt-get -yq --no-install-suggests --no-install-recommends install libxrandr-dev:arm64 libxinerama-dev:arm64 libxcursor-dev:arm64 libxi-dev:arm64 libxext-dev:arm64 -o Dpkg::Options::="--force-overwrite"

    script:
    - mkdir build
    - cd build
    - "CC=aarch64-linux-gnu-gcc-4.8 cmake $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" .."
    - cmake --build .
    - aarch64-linux-gnu-strip src/libglfw.so
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw.so.git"
    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/arm64/ $S3_PARAMS"
    - "aws s3 cp libglfw.so.git s3://build.lwjgl.org/nightly/linux/arm64/ $S3_PARAMS"

  # -----------------
  - name: "Linux arm64 - Wayland"
  # -----------------
    dist: focal
    language: c
    compiler: gcc

    addons:
      apt:
        packages:
        - cmake
        - gcc-aarch64-linux-gnu
        - libc6-dev-arm64-cross

    before_install:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - sudo sed -i 's/deb http/deb [arch=amd64,i386] http/' /etc/apt/sources.list
    - sudo grep "ubuntu.com/ubuntu" /etc/apt/sources.list | sudo tee /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's/amd64,i386/armhf,arm64/' /etc/apt/sources.list.d/ports.list
    - sudo sed -i 's#http://.*/ubuntu#http://ports.ubuntu.com/ubuntu-ports#' /etc/apt/sources.list.d/ports.list
    - sudo dpkg --add-architecture arm64
    - sudo apt-get update || true
    - sudo apt-get -yq install wayland-protocols:arm64 libwayland-dev:arm64 libxkbcommon-dev:arm64 libegl1-mesa-dev:arm64 -o Dpkg::Options::="--force-overwrite"

    script:
    - mkdir build
    - cd build
    - "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/aarch64-linux-gnu/pkgconfig CC=aarch64-linux-gnu-gcc cmake -DGLFW_USE_WAYLAND=ON $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -D_POSIX_C_SOURCE=199309L -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" .."
    - cmake --build .
    - aarch64-linux-gnu-strip src/libglfw.so
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw_wayland.so.git"
    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/arm64/libglfw_wayland.so $S3_PARAMS"
    - "aws s3 cp libglfw_wayland.so.git s3://build.lwjgl.org/nightly/linux/arm64/ $S3_PARAMS"

  # -----------------
  - name: "Linux mips64"
  # -----------------
    dist: xenial
    language: c
    compiler: gcc

    addons:
      apt:
        packages:
        - cmake
        - gcc-5-mips64el-linux-gnuabi64
        - libc6-dev-mips64el-cross

    before_install:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - sudo rm -rf /etc/apt/sources.list
    #- sudo sh -c "echo 'deb http://deb.debian.org/debian stretch main' >> /etc/apt/sources.list"
    - sudo sh -c "echo 'deb http://deb.debian.org/debian buster main' >> /etc/apt/sources.list"
    - sudo dpkg --add-architecture mips64el
    - sudo apt-get update || true
    - sudo apt-get -yq --allow-unauthenticated --no-install-suggests --no-install-recommends install libxrandr-dev:mips64el libxinerama-dev:mips64el libxcursor-dev:mips64el libxi-dev:mips64el libxext-dev:mips64el -o Dpkg::Options::="--force-overwrite"

    script:
    - mkdir build
    - cd build
    - "CC=mips64el-linux-gnuabi64-gcc-5 cmake $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" .."
    - cmake --build .
    - mips64el-linux-gnuabi64-strip src/libglfw.so
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw.so.git"
    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/mips64/ $S3_PARAMS"
    - "aws s3 cp libglfw.so.git s3://build.lwjgl.org/nightly/linux/mips64/ $S3_PARAMS"

  # -----------------
# - name: "Linux mips64 - Wayland"
  # -----------------
#    dist: focal
#    language: c
#    compiler: gcc
#
#    addons:
#      apt:
#        packages:
#        - cmake
#        - gcc-mips64el-linux-gnuabi64
#        - libc6-dev-mips64el-cross
#
#    before_install:
#    - pip install --user awscli
#    - export PATH=$PATH:$HOME/.local/bin
#    - sudo rm -rf /etc/apt/sources.list
#    #- sudo sh -c "echo 'deb http://deb.debian.org/debian stretch main' >> /etc/apt/sources.list"
#    - sudo sh -c "echo 'deb http://deb.debian.org/debian buster main' >> /etc/apt/sources.list"
#    - sudo dpkg --add-architecture mips64el
#    - sudo apt-get update || true
#    - sudo apt-get -yq --allow-unauthenticated --no-install-suggests --no-install-recommends install wayland-protocols:mips64el libwayland-dev:mips64el libxkbcommon-dev:mips64el libegl1-mesa-dev:mips64el -o Dpkg::Options::="--force-overwrite"
#
#    script:
#    - mkdir build
#    - cd build
#    - "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${CMAKE_SYSROOT}/usr/lib/mips64el-linux-gnuabi64/pkgconfig CC=mips64el-linux-gnuabi64-gcc cmake -DGLFW_USE_WAYLAND=ON $GLFW_PARAMS -DCMAKE_C_FLAGS=\"-std=c99 -D_POSIX_C_SOURCE=199309L -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0\" .."
#    - cmake --build .
#    - mips64el-linux-gnuabi64-strip src/libglfw.so
#    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw_wayland.so.git"
#    - "aws s3 cp src/libglfw.so s3://build.lwjgl.org/nightly/linux/mips64/libglfw_wayland.so $S3_PARAMS"
#    - "aws s3 cp libglfw_wayland.so.git s3://build.lwjgl.org/nightly/linux/mips64/ $S3_PARAMS"

  # -----------------
  - name: "macOS x64"
  # -----------------
    os: osx
    osx_image: xcode12.2
    compiler: clang

    install:
    - brew install awscli

    script:
    - mkdir build
    - cd build
    - "cmake $GLFW_PARAMS -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 .."
    - cmake --build .
    - strip -u -r src/libglfw.dylib
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw.dylib.git"
    - "aws s3 cp src/libglfw.dylib s3://build.lwjgl.org/nightly/macosx/x64/ $S3_PARAMS"
    - "aws s3 cp libglfw.dylib.git s3://build.lwjgl.org/nightly/macosx/x64/ $S3_PARAMS"

  # -----------------
  - name: "macOS arm64"
  # -----------------
    os: osx
    osx_image: xcode12.2
    compiler: clang

    install:
    - brew install awscli

    script:
    - mkdir build
    - cd build
    - "cmake $GLFW_PARAMS -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 -DCMAKE_OSX_ARCHITECTURES=arm64 .."
    - cmake --build .
    - strip -u -r src/libglfw.dylib
    - "git log --first-parent --pretty=format:%H HEAD~2..HEAD~1 > libglfw.dylib.git"
    - "aws s3 cp src/libglfw.dylib s3://build.lwjgl.org/nightly/macosx/arm64/ $S3_PARAMS"
    - "aws s3 cp libglfw.dylib.git s3://build.lwjgl.org/nightly/macosx/arm64/ $S3_PARAMS"